global:
  basicAuthSecret:
    create: true
    name: vcloud-basic-auth
    refreshToken: ""  # Required only when `create: true`

  podSecurityStandards:
    enforced: false

  vcdConfig:
    site: ""  # VCD endpoint with the format https://VCD_HOST. No trailing '/'
    org: ""  # VCD organization name where the cluster should be deployed
    ovdc: ""  # VCD virtual datacenter name where the cluster should be deployed
    ovdcNetwork: ""  # VCD virtual datacenter network to be used by the cluster
    vipSubnet: ""  # Virtual IP CIDR for the external network
    clusterid: ""  # "Infra Id" field of VCDCluster object in management cluster
    vAppName: ""
    enableVirtualServiceSharedIP: true  # Multiple VS can share an IP if true.
    oneArm:
      enabled: false  # Creates a NAT rule instead of direct LB IP if true.
      startIP: "192.168.8.2"
      endIP: "192.168.8.100"
    immutable: false  # Associated configmaps will use this flag

cloud-director-named-disk-csi-driver:
  controllerStatefulset:
    csiAttacher:
      image: gsoci.azurecr.io/giantswarm/csi-attacher
    csiProvisioner:
      image: gsoci.azurecr.io/giantswarm/csi-provisioner
    csiPlugin:
      image: gsoci.azurecr.io/giantswarm/cloud-director-named-disk-csi-driver
      tag: 1.5.0

  nodeDaemonset:
    nodeDriverRegistrar:
      image: gsoci.azurecr.io/giantswarm/csi-node-driver-registrar
    csiPlugin:
      image: gsoci.azurecr.io/giantswarm/cloud-director-named-disk-csi-driver
      tag: 1.5.0

  storageClass:
    enabled: true
    delete:
      isDefault: true
      vcdStorageProfileName: ""  # Default SP used if empty.
      fileSystem: "ext4"
    retain:
      isDefault: false
      vcdStorageProfileName: ""  # Default SP used if empty.
      fileSystem: "ext4"

cloud-provider-for-cloud-director:
  ccmDeployment:
    image: gsoci.azurecr.io/giantswarm/cloud-provider-for-cloud-director
    tag: 1.6.0-gs

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
